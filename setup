#!/bin/zsh

# Brew binaries that will be installed
bins=(
    "coreutils"
    "zsh"
    "php@7.4"
    "composer"
    "nvm"
    "neovim"
    "llvm"
    "ripgrep"
    "fzf"
    "tmux"
    # Other useful binaries
    "pv"
    "tree"
    "git-lfs"
    "ccls"
)


# Brew casks that needs to be installed
casks=(
    "firefox"
    "adobe-acrobat-reader"
    "whatsapp"
    "postman"
    "dbngin"
    "visual-studio-code"
    "slack"
    "discord"
    "tableplus"
    "sequel-pro"
    "notion"
)


# ########################################################################## #
#                   /!\ Compilers and Interpreters /!\                       #
# ########################################################################## #
#                                                                            #
# The first thing for the setup is to get the necessary language support for #
# the system i.e., all the compilers and interpreters binaries,  macos comes #
# with xcode-select (xcode cli tools) that  has most  of the compilers below #
# will check xcode command line tools is present, otherwise install it.      #
#                                                                            #
# ########################################################################## #
if xcode-select -p 1>/dev/null
then
    echo "xcode-command line tools already installed"
else
    xcode-select --install
fi


# ########################################################################## #
#                       /!\ System Package Manger  /!\                       #
# ########################################################################## #
#                                                                            #
# brew - The Missing Package Manager for MacOS is one popular choice for mac #
# package manager.                                                           #
#                                                                            #
# ########################################################################## #
if brew -h 1>/dev/null
then
    echo "Brew.sh already installed."
else
    echo /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
fi

# Update to latest brew version.
brew update

# Upgrade all the installed formula
# brew upgrade

BREW_PREFIX=$(brew --prefix)

# ########################################################################## #
#                          /!\ Binaries and Casks /!\                        #
# ########################################################################## #
#                                                                            #
# This section deals with the installation of all the binaries and casks.    #
#                                                                            #
# ########################################################################## #
export PATH="$(brew --prefix coreutils)/libexec/gnubin:/usr/local/bin:$PATH"

for binary in "${bins[@]}"
do
    # get the name of the binary (ex- php in php@7.4)
    b=`echo $binary | cut -d \@ -f 1`
    # check if the binary is already present, otherwise install
    if brew list --formula | grep "$b" 1>/dev/null
    then
        echo "$binary already installed"
    else
        brew install "$binary"
    fi
done

for c in "${casks[@]}"
do
    # check is cask is present or not, if not install
    if brew list --cask | grep "$c" 1>/dev/null
    then
        echo "$c is already installed"
    else
        brew casks install "$c"
    fi
done

# Changing default shell to brew zsh
if ! fgrep -q "${BREW_PREFIX}/bin/zsh" /etc/shells;
then
  echo "${BREW_PREFIX}/bin/zsh" | sudo tee -a /etc/shells;
  chsh -s "${BREW_PREFIX}/bin/zsh";
fi;


# ########################################################################## #
#                          /!\ Post Installation /!\                         #
# ########################################################################## #
#                                                                            #
# This section deals with the setup of specific binaries after installation  #
#                                                                            #
# ########################################################################## #

# Post-Installation for Node Version Manager (NVM)
if [[ " ${bins[@]} " =~ " nvm " ]]; then
    [ ! -d ~/.nvm ] && mkdir ~/.nvm
    # source the nvm.sh file to add nvm in path
    [ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"
    # Install lts support for nodejs, yarn and update npm
    nvm install --lts
    npm install -g npm yarn
fi

brew cleanup
